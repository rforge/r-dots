<% t0 <- Sys.time() %>

<%
library("R.devices");
pkg <- Package("R.devices");
devOptions("png", width=840);
options(width=85);
options(digits=3);
options(str=strOptions(strict.width="cut"));
%>

\documentclass[letter,12pt]{article}
\usepackage{xspace}
\usepackage{alltt}
\usepackage{xcolor}
\usepackage{natbib} % \citep{}, \citet{}

\usepackage{graphicx}
\graphicspath{{figures/}}

\usepackage{hyperref} % \url{}
\hypersetup{hidelinks}

% Page margins
\addtolength{\oddsidemargin}{-0.5in}	
\addtolength{\evensidemargin}{-0.5in}	
\addtolength{\textwidth}{1in}
\addtolength{\topmargin}{-0.5in}	
\addtolength{\textheight}{1in}

% Placement of floats
\setcounter{bottomnumber}{2}
\renewcommand{\topfraction}{1.0}
\renewcommand{\bottomfraction}{1.0}
\renewcommand{\textfraction}{0.0}
\renewcommand{\floatpagefraction}{1.0}

% Macros
\newcommand{\keywords}[1]{\footnotesize{\textbf{Keywords: }#1}\xspace}
\newcommand{\pkg}[1]{\textsl{#1}\xspace}
\newcommand{\file}[1]{\textsl{#1}\xspace}
\newcommand{\code}[1]{\texttt{#1}\xspace}
\newcommand{\bs}{$\backslash$}

\newenvironment{rspVerbatim}{\vspace{-\parskip}\begin{alltt}\color{blue}}{\end{alltt}}
\newenvironment{escapeRspVerbatim}{\vspace{-\parskip}\begin{alltt}}{\end{alltt}}


\title{<%=getName(pkg)%>}
\author{<%=getAuthor(pkg)%>}
\date{April 30, 2012}

\begin{document}

\maketitle
\begin{abstract}
The \pkg{R.devices} package provides utility methods that enhance the existing graphical device functions already available in R for the purpose of simplify the creation of figure files of various image formats and much more.
\end{abstract}

\keywords{devices, graphics, plots, figures}

\begin{center}
\emph{This vignette is distributed as part of the \pkg{R.devices} package, which is available on CRAN (\url{http://cran.r-project.org/}).
Feedback is very much appreciated.}
\end{center}

\clearpage
\tableofcontents

\clearpage

<%-------------------------------------------------------------------
  BACKGROUND
  -------------------------------------------------------------------%>
\section{Introduction}
\label{secIntroduction}


\section{Details}
\label{secDetails}

<%-------------------------------------------------------------------
  CREATING IMAGE FILES
  -------------------------------------------------------------------%>
\section{Creating image files}
\subsection{toNnn(..., \{$<$expression$>$\})}
The \code{toPDF()} and \code{toPNG()} functions are useful when creating image files.  For instance,
\begin{verbatim}
# Use greater objects by default
setOption("devNew/args/par", list(lwd=2));

toPDF("myFigure,yeah,cool", aspectRatio=0.6, { 
  curve(dnorm, from=-5, to=+5)
})
\end{verbatim}
creates a PDF image file named \code{myFigure,yeah,cool.png} whose height is 60\% of its width and displays the Guassian density distribution.
  Moreover, by default all \code{toNNN()} functions writes the image file to the figures/ directory.  For more information, see \code{help("toPDF")}.\\

\begin{figure}[htp]
 \begin{center}
 \resizebox{0.70\textwidth}{!}{%
  \includegraphics{<%=toPDF("MyFigure,yeah,cool", aspectRatio=0.6, {
   curve(dnorm, from=-5, to=+5);
  })%>}
 }%
 \end{center}
 \caption{This figure was generated and inserted into the LaTeX document by RSP-embedded markup.}
 \label{fig:MyFigure}
\end{figure}

\subsection{devEval(..., \{$<$expression$>$\})}
The above \code{toNnn()} functions are wrappers that call \code{devEval(nnn, ...)}.


\section{Setting graphical options}
The \code{devOptions()} function provides a unified interface to getting and settings common options for the various graphical devices available in R.
When using one of the \code{toNnn()} functions, \code{devEval()} or \code{devNew()}, the device options used are given by \code{devOptions()}.  For example, to see the current settings used by PNG device, do:
\begin{verbatim}
<% devOptions("png", reset=TRUE) %>
<%=evalWithEcho({
devOptions("png")
})%>
\end{verbatim}

To change one or several options, do:
\begin{verbatim}
<%=evalWithEcho({
devOptions("png", width=1024, bg="lightblue")
})%>
\end{verbatim}

To reset the options back to the built-in defaults, do:
\begin{verbatim}
<%=evalWithEcho({
devOptions("png", reset=TRUE)
})%>
\end{verbatim}

To get an overview of a set of common options for the supported devices, do:
\begin{verbatim}
<%=evalWithEcho({
knownDevices <- eval(formals(devOptions)$type)
fields <- c("width", "height", "bg", "fg", "pointsize")
opts <- sapply(knownDevices, FUN=function(type) {
  devOptions(type)[fields]
})
rownames(opts) <- fields
opts <- t(opts)
print(opts)
})%>
\end{verbatim}


\subsection{Under the hood (advanced)}
The \code{devOptions()} function tries as far as possible to infer the default options from the default arguments of the device function and any additional options for that device, e.g. \code{formals(pdf)} and \code{pdf.options()}.  Likewise, when setting an option it uses the standard interfaces to do so, whenever possible.  This means that for instance \code{pdf()} will also be affected by \code{devOptions("pdf", width=5)}.  Note that this may not be the case for all devices, because their options cannot be set.  Instead they are all specified as arguments when opening the device, e.g. \code{png()} will \emph{not} be affected by \code{devOptions("png", width=1024)}.
This is why we recommend to always use \code{devNew()} in place of \code{dev.new()}, or better, \code{devEval()} or the corresponding \code{toNnn()} function, which all respects the options set via \code{devOptions()}.







<%-------------------------------------------------------------------
  REFERENCES
  -------------------------------------------------------------------%>
%\bibliographystyle{natbib}
%\bibliography{PSCBS}


<%-------------------------------------------------------------------
  APPENDIX
  -------------------------------------------------------------------%>
\clearpage
\section*{Appendix}
\subsection*{Session information}
<%=toLatex(sessionInfo())%>
This report was automatically generated using \code{rsp()} of the R.rsp package.
Total processing time after RSP-to-R translation was <%=dt <- round(Sys.time()-t0, digits=2)%> <%=attr(dt, "units")%>.

\end{document}
