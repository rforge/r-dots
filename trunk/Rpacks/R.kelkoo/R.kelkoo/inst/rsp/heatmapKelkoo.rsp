<html>
<head>
 <title>R.kelkoo :: <%=fullname%></title>
<style>
TABLE {
  margin: 0px;
  padding: 0px; 
  border-bottom: 1px solid;
  border-right: 1px solid;
}

TR {
  margin: 0px;
  padding: 0px; 
  border: 1px solid; 
}

TH {
  margin: 0px;
  padding: 0px; 
  border-top: 1px solid; 
  border-left: 1px solid; 
}

TD {
  margin: 0px;
  padding: 0px; 
  border-top: 1px solid; 
  border-left: 1px solid; 
  text-align: right;
}

.Price {
  text-align: right;
  font-size: 70%;
}

.Date {
  font-size: 70%;
}

</style>
</head>

<body>
<h1>R.kelkoo : <%=fullname%></h1>

<h2>Query details</h2>
<ul>
 <li>Outbound airports: <%=sort(unique(df$oFromTo))%></li>
 <li>Homebound airports: <%=sort(unique(df$hFromTo))%></li>
 <li>Outbound date range: <%={s <- dimnames(map)[[1]]; paste(s[c(1,length(s))], collapse="--")}%></li>
 <li>Homebound date range: <%={s <- dimnames(map)[[2]]; paste(s[c(1,length(s))], collapse="--")}%></li>
 <li>Selection: <%=select%></li>
 <li>Price range: <%={s <- summary(df$price, na.rm=TRUE); paste(names(s), s, sep=":", collapse=", ")}%></li>
</ul>

<h2>Raw data</h2>
<p>
Raw data in a tab-delimited file: <a href="scan.xls">scan.xls</a>
</p>


<h2>Heatmap summaries</h2>
<%
library(R.colors);

ColorClazz <- TopologyColor;
ColorClazz <- TerrainColor;
#ColorClazz <- HeatColor;

# Transponse if 10% more wide than tall
if (dim(map)[2] / dim(map)[1] > 1.1)
  map <- aperm(map, c(2,1,3));

# Generate row and column names for table
dimnames <- lapply(dimnames(map), function(names) {
  paste('<td class="Date">', names, '</td>', sep="");
})

# Generate column header
tmp <- paste(dimnames[[2]], collapse="");
trh <- paste('<tr><td></td>', tmp, '</tr>', sep="");

# Generate heatmap colors
range <- range(map, na.rm=TRUE);
mapZ <- (map - range[1])/diff(range);
col <- getColors(ColorClazz(mapZ));
col <- substring(col, 1, 7);
dim(col) <- dim(map);

# Generate table cells
mapZ <- as.character(map);
mapZ[is.na(map)] <- "-";
dim(mapZ) <- dim(map);
tds <- paste('<td style="background: ', col, ';" class="Price">', mapZ, '</td>', sep="");
dim(tds) <- dim(map);
rm(col, mapZ);
%>


<% for (qq in 1:dim(map)[3]) { %>

<h3>Quantile <%=dimnames(map)[[3]][qq]%></h3>

<%
# Generate table rows
tmp <- apply(tds[,,qq], MARGIN=1, paste, collapse="");
trs <- paste('<tr>', dimnames[[1]], tmp, '</tr>', sep="");
trs <- paste(c(trh, trs), collapse="\n");
tbl <- paste('<table cellspacing="0", cellpadding="0">', trs, '</table>', sep="");
%>

<%=tbl%>

<% } # for (qq in ...) %>

</body>
</html>
