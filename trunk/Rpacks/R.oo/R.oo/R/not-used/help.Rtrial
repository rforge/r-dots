help <- appendVarArgs(help)
"?" <- appendVarArgs(get("?", mode="function"))

setMethodS3("help", "character", function(this, ...) {
  args <- list(...);
  if (regexpr("^[a-z].*::.*$", this) != -1) {
    package <- gsub("::.*$", "", this);
    topic <- gsub("^[a-z].*::", "", this);
    args[["package"]] <- package;
    args[["topic"]] <- topic;
  } else {
    args[["topic"]] <- this;
  }

  do.call("help.default", args);
})


setMethodS3("help", "Package", function(this, topic=NULL, ...) {
  isNull <- FALSE;
  tryCatch({
    isNull <- is.null(topic);
  }, error = function(ex) {})

  if (isNull) {
    topic <- getName(this);
  } else {
    isChar <- FALSE;
    tryCatch({
      isChar <- is.character(topic);
    }, error = function(ex) {
    })

    if (!isChar)
      topic <- deparse(substitute(topic));
  }

  args <- list(...);
  args[["topic"]] <- topic;
  args[["package"]] <- getName(this);
  do.call("help.default", args);
})


setMethodS3("help", "Class", function(this, topic=NULL, ...) {
  isNull <- FALSE;
  tryCatch({
    isNull <- is.null(topic);
  }, error = function(ex) {})

  if (isNull) {
    topic <- getName(this);
  } else {
    isChar <- FALSE;
    tryCatch({
      isChar <- is.character(topic);
    }, error = function(ex) {
    })

    if (!isChar)
      topic <- deparse(substitute(topic));

    topic <- paste(topic, ".", getName(this), sep="");
  }

  args <- list(...);
  args[["topic"]] <- topic;
  args[["package"]] <- getPackage(this);

  do.call("help.default", args);
})



setMethodS3("getDetails", "Object", function(this, private=FALSE, ...) {
  # Don't really like using this, but this is required in order to
  # find the environment where the object lives.
  objectName <- deparse(substitute(this));

  s <- paste("Class: ", class(this)[1], sep="");
  if (length(class(this)[-1]) == 0) {
    s <- paste(s, " (a root class)", sep="");
  } else {
    s <- paste(s, " extends ", paste(class(this)[-1], collapse=", "), sep="");
  }
  pkg <- getPackage(Class$forName(class(this)[1]));
  if (is.null(pkg)) {
    s <- paste(s, "\n", sep="");
  } else {
    s <- paste(s, ", and is defined in package '", pkg, "'\n", sep="");
  }

  fields <- c();
  for (field in getFields(this, private=private)) {
    fields <- c(fields, paste("'", field, "' [", class(this[[field]])[1], "]", sep=""));
  }
  if (length(fields) == 0) {
    fields <- paste("(no ", ifelse(private, "", "public "), "fields)", sep="");
  } else {
    fields <- paste(fields, collapse=", ");
  }

  s <- paste(s, "Fields: ", fields, "\n", sep="");

  s <- paste(s, "Core value: ", unclass(this), " [", class(unclass(this))[1], "]\n", sep="");

  s <- paste(s, "Object size: ", objectSize(this), " bytes\n", sep="");

  s <- paste(s, "Instatition time: ", getInstanciationTime(this), " bytes\n", sep="");

  s <- paste(s, "Environment: ", find(objectName, mode=mode(this))[1], "\n", sep="");

  s <- paste(s, "As character: \"", as.character(this), "\"\n", sep="");
  strsplit(s, split="\n")[[1]];
})


setMethodS3("summary", "Object", function(...) {
  cat(getDetails(...), sep="\n");
})

setMethodS3("?", "character", function(...) {
  help(...);
})

setMethodS3("?", "Package", function(...) {
  help(...);
})

setMethodS3("?", "Class", function(...) {
  help(...);
})

setMethodS3("help", "Object", function(...) {
  cat(getDetails(...), sep="\n");
})

setMethodS3("?", "Object", function(...) {
  help(...);
})


############################################################################
# HISTORY:
# 2005-06-14
# o Added getDetails() and summary() for the Object class.
# o Created. Seems work, but has to be tested for a while.
############################################################################
